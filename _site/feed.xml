<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2020-11-05T03:40:47+00:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">개발새발</title><subtitle>Let's share even a little things.</subtitle><author><name>Joonsoo Park</name></author><entry><title type="html">DDoS 공격 - hping3</title><link href="http://0.0.0.0:4000/%EC%A0%95%EB%B3%B4%EB%B3%B4%EC%95%88/Network-Attack-With-HPING3/" rel="alternate" type="text/html" title="DDoS 공격 - hping3" /><published>2020-11-05T00:00:00+00:00</published><updated>2020-11-05T00:00:00+00:00</updated><id>http://0.0.0.0:4000/%EC%A0%95%EB%B3%B4%EB%B3%B4%EC%95%88/Network-Attack-With-HPING3</id><content type="html" xml:base="http://0.0.0.0:4000/%EC%A0%95%EB%B3%B4%EB%B3%B4%EC%95%88/Network-Attack-With-HPING3/">&lt;font color=&quot;#ffcc66&quot;&gt;LAND Attack&lt;/font&gt;

&lt;p&gt;Land Attack이란 source ip(송신자의 ip)와 destination ip(수신자의 ip)를 같게 만들어 공격하는 방법이다. IP Spoofing을 이용한 공격이다.&lt;/p&gt;

&lt;font color=&quot;#ffcc66&quot;&gt;IP Spoofing&lt;/font&gt;
&lt;p&gt;IP Spoofing이란 자신의 ip를 변조해 자신이 만든 패킷을 다른 컴퓨터가 만든 패킷처럼 만드는 것이다.&lt;/p&gt;

&lt;p&gt;hping3 -a [변조할 ip] [수신자의 ip] --icmp --flood&lt;/p&gt;

&lt;p&gt;--flood : 좀 더 패킷을 빠르게 보내기 위해 사용하는 옵션&lt;/p&gt;

&lt;p&gt;Ping of Death&lt;/p&gt;</content><author><name>Joonsoo Park</name></author><category term="정보보안" /><summary type="html">LAND Attack</summary></entry><entry><title type="html">ARP Spoofing - dnsniff</title><link href="http://0.0.0.0:4000/%EC%A0%95%EB%B3%B4%EB%B3%B4%EC%95%88/ARP-Spoofing-and-snort-rule/" rel="alternate" type="text/html" title="ARP Spoofing - dnsniff" /><published>2020-11-04T00:00:00+00:00</published><updated>2020-11-04T00:00:00+00:00</updated><id>http://0.0.0.0:4000/%EC%A0%95%EB%B3%B4%EB%B3%B4%EC%95%88/ARP-Spoofing-and-snort-rule</id><content type="html" xml:base="http://0.0.0.0:4000/%EC%A0%95%EB%B3%B4%EB%B3%B4%EC%95%88/ARP-Spoofing-and-snort-rule/">&lt;p&gt;ARP Spoofing&lt;/p&gt;

&lt;p&gt;dnsniff&lt;/p&gt;

&lt;p&gt;VMWARE 등의 가상 장비를 사용해서 
arp -a : 현재 MAC 테이블 확인&lt;/p&gt;

&lt;p&gt;route -n  : 게이트웨이 주소 확인&lt;/p&gt;

&lt;p&gt;arpspoof -i [인터페이스 이름] [target ip] [gateway ip]&lt;/p&gt;

&lt;p&gt;VMware를 사용해 실습할 경우 각 OS의 네트워크 인터페이스가 다를 수가 있다. kali는 eth0인데 서버는 ens33이라던지. 이 경우 /etc/default/grub 파일을 수정해 주면 된다.(centOS 기준)
GRUB_CMDLINE_LINUX
/swap []net.ifnames=0] rhgb quite&lt;/p&gt;

&lt;p&gt;# grub2-mkconfig -o /boot/grub2grub.cfg&lt;/p&gt;

&lt;p&gt;cd /etc/sysconfig/network-scripts&lt;/p&gt;

&lt;p&gt;mv ifcfg-ens33 ifcfg-eth0&lt;/p&gt;

&lt;p&gt;vi ifcfg-eth0&lt;/p&gt;

&lt;p&gt;그 후 재부팅 후 네트워크를 확인하면 이름이 변경된 것을 알 수 있다.&lt;/p&gt;</content><author><name>Joonsoo Park</name></author><category term="정보보안" /><summary type="html">ARP Spoofing</summary></entry><entry><title type="html">How to make a git blog</title><link href="http://0.0.0.0:4000/%EA%B9%83%20%EB%B8%94%EB%A1%9C%EA%B7%B8%20%EB%A7%8C%EB%93%A4%EA%B8%B0/How-to-make-a-git-blog/" rel="alternate" type="text/html" title="How to make a git blog" /><published>2020-11-02T00:00:00+00:00</published><updated>2020-11-02T00:00:00+00:00</updated><id>http://0.0.0.0:4000/%EA%B9%83%20%EB%B8%94%EB%A1%9C%EA%B7%B8%20%EB%A7%8C%EB%93%A4%EA%B8%B0/How-to-make-a-git-blog</id><content type="html" xml:base="http://0.0.0.0:4000/%EA%B9%83%20%EB%B8%94%EB%A1%9C%EA%B7%B8%20%EB%A7%8C%EB%93%A4%EA%B8%B0/How-to-make-a-git-blog/">&lt;p&gt;깃 블로그를 만들어보자.&lt;/p&gt;

&lt;p&gt;깃 블로그를 만드는 방법은 매우 쉬워보이고 실제로 쉽기도 하다.
모두가 가지고 있는 블로그를 생성해보고 원하는 것을 공유해보자!&lt;/p&gt;

&lt;p&gt;구름IDE와 Jekyll를 이용해 블로그를 생성해보겠다.
일단 Github에서 레포지토리 이름을 &lt;font color=&quot;#ffcc66&quot;&gt;username&lt;/font&gt;.github.io로 생성 해주자. 꼭 위 방법대로 생성할 필요는 없다. 자신이 원하는 이름으로 레포지터리를 생성한 뒤 설정에서 깃허브 페이지 설정을 지정해 페이지를 생성할 수 있다. 
&lt;img src=&quot;/img/ex_post_1/ex1_gitsettings.png&quot; alt=&quot;example_gitsettings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;레포지터리를 생성한 후 README.MD에 글을 쓴 후 &lt;font color=&quot;#ffcc66&quot;&gt;username&lt;/font&gt;.github.io에 접속 시 README의 내용이 바로 출력되는 것을 확인할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/ex_post_1/ex2_web.png&quot; alt=&quot;example_website&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이렇게 하면 기초적인 설정은 끝났다. 이제 테마를 이용해 블로그의 레이아웃을 생성해보자.Jekyll의 경우에는 정말 많은 테마들이 있는데, 이 블로그의 경우에는 &lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes&quot;&gt;minimal-mistakes&lt;/a&gt; 테마를 이용해 작성됐다. 많은 분들이 이 테마를 이용해 자료가 많기 때문에 처음에 블로그를 생성하는 분들에게 추천드린다.&lt;/p&gt;

&lt;p&gt;위 깃을 클론하고 이를 자신이 만든 레포지터리에 커밋하면 테마가 적용된다. 여기서 config.yml을 수정해서 사이트를 설정해주면 되는데, 먼저 URL과 Author 부분을 설정해주도록 하자.&lt;/p&gt;

&lt;p&gt;현재 깃에서 직접 수정하고 반영하는 경우 블로그의 수정을 확인하려면 매번 커밋이 이루어져야 한다. 따라서 보통 수정한 후 루비를 이용해 로컬에서 확인하고 수정하는데, 다음 포스트에서는 이를 구름을 이용해 하는 것을 이야기 해 보겠다.&lt;/p&gt;</content><author><name>Joonsoo Park</name></author><category term="깃 블로그 만들기" /><summary type="html">깃 블로그를 만들어보자.</summary></entry></feed>