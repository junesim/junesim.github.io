<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://0.0.0.0:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://0.0.0.0:4000/" rel="alternate" type="text/html" /><updated>2020-11-23T08:34:39+00:00</updated><id>http://0.0.0.0:4000/feed.xml</id><title type="html">개발새발</title><subtitle>Let's share even a little things.</subtitle><author><name>Joonsoo Park</name></author><entry><title type="html">다양한 웹 해킹</title><link href="http://0.0.0.0:4000/%EC%A0%95%EB%B3%B4%EB%B3%B4%EC%95%88/CSRF/" rel="alternate" type="text/html" title="다양한 웹 해킹" /><published>2020-11-23T00:00:00+00:00</published><updated>2020-11-23T00:00:00+00:00</updated><id>http://0.0.0.0:4000/%EC%A0%95%EB%B3%B4%EB%B3%B4%EC%95%88/CSRF</id><content type="html" xml:base="http://0.0.0.0:4000/%EC%A0%95%EB%B3%B4%EB%B3%B4%EC%95%88/CSRF/">&lt;p&gt;웹 해킹 기술 및 분류
XSS,CSRF,피싱, 파밍, SQL 인젝션, 웹 셸&lt;/p&gt;

&lt;p&gt;정리해 기억해두자….
웹 서버 공격이 주 목적이 아니래
파밍은 비슷한 도메인을 이용하는 것인가봐&lt;/p&gt;</content><author><name>Joonsoo Park</name></author><category term="정보보안" /><summary type="html">웹 해킹 기술 및 분류 XSS,CSRF,피싱, 파밍, SQL 인젝션, 웹 셸</summary></entry><entry><title type="html">프로토콜에 따른 패킷의 헤더</title><link href="http://0.0.0.0:4000/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/Network-UDP-Header/" rel="alternate" type="text/html" title="프로토콜에 따른 패킷의 헤더" /><published>2020-11-16T00:00:00+00:00</published><updated>2020-11-16T00:00:00+00:00</updated><id>http://0.0.0.0:4000/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/Network-UDP-Header</id><content type="html" xml:base="http://0.0.0.0:4000/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/Network-UDP-Header/">&lt;p&gt;프로토콜에 따라 패킷의 헤더는 달라진다. 이에 대해 알아보자&lt;/p&gt;

&lt;h2&gt;UDP 패킷 헤더&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;UDP 패킷 헤더&lt;/strong&gt;는 64비트로 16비트의 4가지 필드로 구성되어 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Source Port Number: 송신 포트 번호&lt;/li&gt;
  &lt;li&gt;Destination Port Number: 수신 포트 번호&lt;/li&gt;
  &lt;li&gt;UDP Length: 패킷의 길이&lt;/li&gt;
  &lt;li&gt;UDP Checksum: 패킷 전체의 Checksum, 이 필드가 0일 경우 수신측은 체크섬을 계산하지 않는다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Joonsoo Park</name></author><category term="네트워크" /><summary type="html">프로토콜에 따라 패킷의 헤더는 달라진다. 이에 대해 알아보자 UDP 패킷 헤더 UDP 패킷 헤더는 64비트로 16비트의 4가지 필드로 구성되어 있다. Source Port Number: 송신 포트 번호 Destination Port Number: 수신 포트 번호 UDP Length: 패킷의 길이 UDP Checksum: 패킷 전체의 Checksum, 이 필드가 0일 경우 수신측은 체크섬을 계산하지 않는다.</summary></entry><entry><title type="html">파이썬</title><link href="http://0.0.0.0:4000/%ED%8C%8C%EC%9D%B4%EC%8D%AC/Python/" rel="alternate" type="text/html" title="파이썬" /><published>2020-11-16T00:00:00+00:00</published><updated>2020-11-16T00:00:00+00:00</updated><id>http://0.0.0.0:4000/%ED%8C%8C%EC%9D%B4%EC%8D%AC/Python</id><content type="html" xml:base="http://0.0.0.0:4000/%ED%8C%8C%EC%9D%B4%EC%8D%AC/Python/">&lt;p&gt;파이썬에 대해 알아보자.&lt;/p&gt;

&lt;p&gt;프로그래밍 언어엔 &lt;strong&gt;컴파일러 언어와 인터프리터 언어&lt;/strong&gt;가 있다.&lt;/p&gt;

&lt;h2&gt;컴파일러 언어&lt;/h2&gt;
&lt;p&gt;보통 우리가 많이 사용했던 JAVA, C++, C 등은 컴파일러 언어라고한다. 컴파일러가 컴파일 과정에서 소스 코드를 기계언어로 바꾸고 이를 컴퓨터에서 동작시킨다. 반응성이 빠르지만 빌드 과정에서 시간이 소요되 작은 수정을 하더라도 빌드 시간이 오래 걸린다.&lt;/p&gt;

&lt;h2&gt;인터프리터 언어&lt;/h2&gt;
&lt;p&gt;인터프리터 언어의 경우 컴파일 과정이 없고, 바로 실행 된다. 한줄 한줄 해석해 바로 명령어를 실행하는데, 반응성은 떨어지지만 빌드 시간 등이 필요 없다. 스크립트 언어와 파이썬이 해당된다.&lt;/p&gt;</content><author><name>Joonsoo Park</name></author><category term="파이썬" /><summary type="html">파이썬에 대해 알아보자.</summary></entry><entry><title type="html">DHCP</title><link href="http://0.0.0.0:4000/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/DHCP/" rel="alternate" type="text/html" title="DHCP" /><published>2020-11-12T00:00:00+00:00</published><updated>2020-11-12T00:00:00+00:00</updated><id>http://0.0.0.0:4000/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/DHCP</id><content type="html" xml:base="http://0.0.0.0:4000/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/DHCP/">&lt;p&gt;DHCP란 무엇인가&lt;/p&gt;

&lt;h2&gt;DHCP&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Dynamic Host Configuration Protocol&lt;/strong&gt;의 약자&lt;/p&gt;

&lt;p&gt;DHCP 서버가 하는 역할은 자신의 네트워크 안에 있는 클라이언트 컴퓨터가 부팅될 떄 자동으로 네트워크 설정(IP,서브넷 마스크, 게이트웨이 주소, DNS 서버 주소)을 할당해 주는 것이다.&lt;/p&gt;

&lt;h2&gt;서버의 동작 방식&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;동적 할당&lt;/strong&gt; : 네트워크 관리자가 일정 범위의 IP 주소를 지정하고  클라이언트의 요청에 따라 IP를 할당해 준다. 임대 개념으로 이뤄지고 임대 기간이 지나면 IP를 회수하고 다시 할당하는 방식이다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;자동 할당&lt;/strong&gt; : 동적할당과 유사하나 클라이언트에 할당된 IP가 영구적으로 적용된다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;수동 할당&lt;/strong&gt; : MAC 주소기반으로 이루어지고, 서브넷 범위 안에서 고정 IP를 할당하는 방법이다. 고정 할당이라고도 불리며 현업에서는 주로 이 방법이 사용된다.&lt;/p&gt;</content><author><name>Joonsoo Park</name></author><category term="네트워크" /><summary type="html">DHCP란 무엇인가</summary></entry><entry><title type="html">메일 프로토콜과 구성요소에 대해 알아보자</title><link href="http://0.0.0.0:4000/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/Mail-Protocol/" rel="alternate" type="text/html" title="메일 프로토콜과 구성요소에 대해 알아보자" /><published>2020-11-12T00:00:00+00:00</published><updated>2020-11-12T00:00:00+00:00</updated><id>http://0.0.0.0:4000/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/Mail-Protocol</id><content type="html" xml:base="http://0.0.0.0:4000/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/Mail-Protocol/">&lt;p&gt;메일 프로토콜과 구성요소에 대해 알아보자.&lt;/p&gt;

&lt;h2&gt;메일 프로토콜&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;SMTP&lt;/strong&gt; : Simple Mail Transfer Protocol 클라이언트에서 메일을 보내거나 메일 서버끼리 메일을 주고 받을 떄 사용하는 프로토콜&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;POP3, IMAP3&lt;/strong&gt; : 메일 서버에 있는 메일을 클라이언트로 가져오는 프로토콜&lt;/p&gt;

&lt;p&gt;보낼 때는 SMTP 받을 때는 POP3, IMAP3&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;차이점&lt;/strong&gt;
POP3의 경우 클라이언트가 서버의 메일을 가져오게 되면 서버의 메일은 삭제된다. IMAP3의 경우 클라이언트가 가져간다 하더라도 서버의 메일은 유지된다. 서버가 메일을 감당하기 힘들 경우 POP3를 사용하게 되면 서버의 비용이 준다는 장점이 있다. 요즘은 보통 IMAP을 사용합니다.&lt;/p&gt;

&lt;p&gt;구성 요소&lt;/p&gt;

&lt;p&gt;MTA, MUA, MDA, MRA, 메일 큐&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MUA&lt;/strong&gt;: Mail User Agnet 자신이 속한 메일 서버에 전송해 줍니다. 메일을 다운로드하거나 MTA로 업로드. SMTP에 의해 접속하며 인증과정 필요.&lt;/p&gt;

&lt;p&gt;ex) Thunderbird, Outlook, Evolution&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MTA&lt;/strong&gt;: Mail Transfer Agent. 다른 MTA나 메일 사용자에게 메일을 보내거나 받는 역할을 해줍니다.(RELAY 과정) 또한, 바이러스 및 스팸 메일과 같은 필터링 기능이 있다. 25포트를 사용하는 SMTP에 의해 이뤄진다.&lt;/p&gt;

&lt;p&gt;ex) sendmail,Qmail,Postfix&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MDA&lt;/strong&gt;: Mail Delivery Agent 메일 서버간 메일을 송신해줍니다. MTA한테 메일을 받아 사용자의 메일서버에 저장 및 운반하는 역할. 메일 서버의 메일을 MUA가 읽어 로컬 PC에 다운로드 시 IMAP POP3&lt;/p&gt;

&lt;p&gt;ex) Dovecot, Courier, Cyrus&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;메일 큐&lt;/strong&gt;: 전송량이 많아 메일이 전송되지 않을 경우 메일이 보내지지 않는 경우가 많았다고 한다. 그래서 메일 큐를 생성해 메일을 보내지 못할 경우 큐에 저장을 해놓고 전송이 가능할 때 메일을 보내주는 개념이다.&lt;/p&gt;

&lt;!--

dns mx(mailexchanger) 추가
nslookup에서 지정한 도메인을 쳤을 경우 ip가 정확하면 성공.

dns 설정을 자신이 설정한 ip로 설정해줘야합니다.
sendmail-cf , dovecot 다운로드 
이툴을 이용해서 할껀가봐
/sendmail.cf
85 localhost를 자신이 설정한 mail 도메인으로
264 수정 루프백 아이피 제거

/etc/mail/access에 지정한 도메인 추가

restart 하고 makemap hash를 통해 재생성

/etc/dovecot/conf.d/10-mail.conf
25,116 : 주석제거
121 : group mail 추가

10-auth.conf
10: no로 plaintext_auth를 가능하게

10-ssl.conf
8 :ssl yes

user 추가

sendmail, dovecot  재시작


thunderbird 설치 후 자신에게 메일 보내보기

thunderbird 설정 포트 110,25 서버 호스트 생성해준것으로, ssl은 사용하지 않고 인증은 평문패스워드와 커버로스 --&gt;</content><author><name>Joonsoo Park</name></author><category term="네트워크" /><summary type="html">메일 프로토콜과 구성요소에 대해 알아보자.</summary></entry><entry><title type="html">DNS</title><link href="http://0.0.0.0:4000/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/DNS/" rel="alternate" type="text/html" title="DNS" /><published>2020-11-11T00:00:00+00:00</published><updated>2020-11-11T00:00:00+00:00</updated><id>http://0.0.0.0:4000/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/DNS</id><content type="html" xml:base="http://0.0.0.0:4000/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/DNS/">&lt;p&gt;DNS란 무엇인가&lt;/p&gt;

&lt;h2&gt;DNS 서버&lt;/h2&gt;

&lt;p&gt;Domain Name Server의 약자.&lt;/p&gt;

&lt;p&gt;모든 통신은 IP로 통신이 되는데 이를 사람이 기억하긴 힘드니 IP를 도메인으로 바꿔주는 역할을 한다. 기존에는 hosts 파일(호스트 파일)을 이용해 네트워크에 접속했는데 네트워크 상의 컴퓨터의 증가로 이를 일일히 개인이 기억하는 것은 비효율적.
따라서 이를 전문적으로 해주는 DNS 서버를 생성해서 이용하게 된다.&lt;/p&gt;

&lt;p&gt;ex) PowerDNS,ndjbdns,knot,unbound,bind&lt;/p&gt;

&lt;p&gt;도메인 입력 시 먼저 호스트 파일을 참조, 없으면 resolv.conf를 참조해 네임서버에 대한 정보를 얻고 네임 서버에 도메인을 질의 함.&lt;/p&gt;

&lt;p&gt;네임서버는 DNS 서버
도메인 이름을 IP 주소로 변환시켜주는 역할
=Name Resoulution&lt;/p&gt;</content><author><name>Joonsoo Park</name></author><category term="네트워크" /><summary type="html">DNS란 무엇인가</summary></entry><entry><title type="html">WEB Server와 WAS의 차이</title><link href="http://0.0.0.0:4000/ict/WEB-WAS/" rel="alternate" type="text/html" title="WEB Server와 WAS의 차이" /><published>2020-11-10T00:00:00+00:00</published><updated>2020-11-10T00:00:00+00:00</updated><id>http://0.0.0.0:4000/ict/WEB-WAS</id><content type="html" xml:base="http://0.0.0.0:4000/ict/WEB-WAS/">&lt;p&gt;&lt;strong&gt;Web Server&lt;/strong&gt;와 &lt;strong&gt;WAS&lt;/strong&gt;에 대해 알아보자.&lt;/p&gt;

&lt;h2&gt;Web Server&lt;/h2&gt;
&lt;p&gt;웹 서비스를 할 수 있는 환경을 구축하기 위해 사용하는 소프트웨어를 의미한다. HTTP를 통해 클라이언트가 요청하는 HTML 문서 및 오브젝트를 전송해주는 서버를 의미한다. &lt;strong&gt;정적 콘텐츠&lt;/strong&gt;를 제공해 주기 때문에 항상 같은 결과를 받을 수 있다.&lt;/p&gt;

&lt;p&gt;ex) Apache&lt;/p&gt;

&lt;h2&gt;WAS(Web Application Server)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;동적인 컨텐츠&lt;/strong&gt;를 제공하기 위해 만들어진 Application Server를 의미한다. 전통적 웹 서버의 경우 서버에 작성된 html만을 제공했다면 WAS에서는 &lt;strong&gt;데이터베이스, 트랜잭션 관리, 업무 처리에 필요한 비즈니스 로직&lt;/strong&gt;을 수행하는 등의 부가적인 기능들이 추가된다.&lt;/p&gt;

&lt;p&gt;ex) Tomcat&lt;/p&gt;

&lt;h2&gt;왜 두개를 분리해서 사용하는가&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;WAS&lt;/strong&gt;가 정적인 컨텐츠에 더불어 동적인 컨텐츠까지 제공할 수 있다면 WAS만 사용하면 되는데 왜 두 개를 분리해서 사용할까라는 의문이 들수가 있다. 서버의 성능 때문이라고 생각하는데 이는 오해이다. 이유로는 Apache Tomcat의 경우 5.5 부터는 Native Moudlue로 httpd를 처리하기 떄문에 성능면에서 전혀 차이가 없다고 한다. 하지만 보안성을 강화하고, 로드밸런싱 등의 이유로 분리해 사용하는 것이 좋다고 한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;출처&lt;/strong&gt;: &lt;a href=&quot;https://sieunlim.tistory.com/17&quot;&gt;개발노트&lt;/a&gt;  &lt;a&gt;https://sieunlim.tistory.com/17&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;여담&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Apache와 Tomcat 모두 Apache 사에서 개발 되어 보통 Apache, Apache Tomcat 등으로 혼용해서 불리지만 이 포스트에서는 WAS와 전통적 Web Server와의 비교를 하기 위해 Apache와 Tomcat으로 나누어 예시를 표했다.&lt;/p&gt;</content><author><name>Joonsoo Park</name></author><category term="ICT" /><summary type="html">Web Server와 WAS에 대해 알아보자.</summary></entry><entry><title type="html">관계대수와 관계해석</title><link href="http://0.0.0.0:4000/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/Database/" rel="alternate" type="text/html" title="관계대수와 관계해석" /><published>2020-11-09T00:00:00+00:00</published><updated>2020-11-09T00:00:00+00:00</updated><id>http://0.0.0.0:4000/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/Database</id><content type="html" xml:base="http://0.0.0.0:4000/%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4/Database/">&lt;p&gt;기능이 같지만 이름이 다른 &lt;strong&gt;관계대수&lt;/strong&gt;와 &lt;strong&gt;관계해석&lt;/strong&gt;에 대해 알아보자.&lt;/p&gt;

&lt;h2&gt;관계대수&lt;/h2&gt;
&lt;p&gt;  관계대수란 R-DB(Relational Database)에서 원하는 정보와 그 정보를 검색하기 위해 &lt;strong&gt;어떻게&lt;/strong&gt; 검색할 것인지를 기술하는 &lt;strong&gt;절차적인 언어&lt;/strong&gt;이다. 순수관계연산자, 일반 집합연산자가 해당된다. 릴레이션을 처리하기 위한 연산의 집합으로 피연산자와 결과가 모두 릴례이션이다.&lt;/p&gt;

&lt;h2&gt;관계해석&lt;/h2&gt;
&lt;p&gt;  관계해석이란 &lt;strong&gt;비절차적인 언어로&lt;/strong&gt;원하는 정보가 &lt;strong&gt;무엇&lt;/strong&gt;이라는 것만 정의하고 이를 통해 검색하는 것을 의미한다. 튜플 관계 해석과 도메인 관계 해석이 해당된다. 프레디킷 해석에 기반을 두고, 릴레이션을 정의하는 방법을 제공한다.&lt;/p&gt;</content><author><name>Joonsoo Park</name></author><category term="데이터베이스" /><summary type="html">기능이 같지만 이름이 다른 관계대수와 관계해석에 대해 알아보자.</summary></entry><entry><title type="html">Server</title><link href="http://0.0.0.0:4000/ict/Server/" rel="alternate" type="text/html" title="Server" /><published>2020-11-09T00:00:00+00:00</published><updated>2020-11-09T00:00:00+00:00</updated><id>http://0.0.0.0:4000/ict/Server</id><content type="html" xml:base="http://0.0.0.0:4000/ict/Server/">&lt;p&gt;  서버란 무엇인가.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;사용자들에게 자원을 제공해 주는 것.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;웹 서버&lt;/h2&gt;
&lt;p&gt;  기본 APM(Apache(웹 서버), PhP(프로그래밍 언어), MySql(데이터베이스,요즘엔 MariaDB) 이렇게 해서 APM이라고 불린다. 기본이지만 요즘에는 장고(Django) 나 다른 방법으로 구축할 수 있습니다. 요즘엔 Apache 대신 Tomcat을 사용합니다.&lt;/p&gt;

&lt;p&gt;  보통 웹 서버의 경우 리눅스를 이용해서 구축을 많이 하는데 리눅스의 대표적인 특징에는 &lt;strong&gt;쉘&lt;/strong&gt;과 &lt;strong&gt;커널&lt;/strong&gt;이 있다.&lt;/p&gt;

&lt;h2&gt;쉘&lt;/h2&gt;
&lt;p&gt;  쉘의 경우 사용자와 커널간의 인터페이스이다. 사용자가 명령어를 입력하는 bash 쉘이 대표적이다.&lt;/p&gt;
&lt;h2&gt;커널&lt;/h2&gt;
&lt;p&gt;  커널은 하드웨어의 동작 관리 및 소프트웨어와의 동작을 가능하게 해준다. 커널의 경우 OS의 핵심이라고 할만큼 중요하다. 커널에서 실행되는 프로그램에는 주의가 필요하며 보통 &lt;strong&gt;root&lt;/strong&gt; 계정이 커널에 영향을 끼칠 수 가 있어 보안적으로 대비가 필요하다.&lt;/p&gt;</content><author><name>Joonsoo Park</name></author><category term="ICT" /><summary type="html">  서버란 무엇인가.</summary></entry><entry><title type="html">네트워크 통신 방식의 종류</title><link href="http://0.0.0.0:4000/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/type-of-network/" rel="alternate" type="text/html" title="네트워크 통신 방식의 종류" /><published>2020-11-06T00:00:00+00:00</published><updated>2020-11-06T00:00:00+00:00</updated><id>http://0.0.0.0:4000/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/type-of-network</id><content type="html" xml:base="http://0.0.0.0:4000/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC/type-of-network/">&lt;p&gt;  통신방식들에 대해 알아보자.&lt;/p&gt;

&lt;p&gt;  통신 방식을 나누는 방법엔 다양한 방법이 있다. 크게 &lt;strong&gt;연결형(Connection)&lt;/strong&gt;과 &lt;strong&gt;비연결형(Connectionless)&lt;/strong&gt;으로 나눌 수 있다.&lt;/p&gt;
&lt;h2&gt;연결형(Connection)&lt;/h2&gt;
&lt;p&gt;  데이터 송신을 시작하기 전에 호스트 간의 회선을 논리적으로 연결한 후 통신을 시작한다. 연결의 확립과 끊기 과정이 필요하지만 신뢰성이 높다. 데이터의 순서가 중요할 경우 적합하다. 전화를 생각하면 이해가 편할듯 하다. 대표적인 프로토콜로는 &lt;strong&gt;TCP&lt;/strong&gt;가 해당된다.&lt;/p&gt;
&lt;h2&gt;비연결형(Connectionless)&lt;/h2&gt;
&lt;p&gt;  비연결형의 경우 연결의 확립과 끊기 처리가 없다. 송신자는 수신자가 확인되지 않아도 데이터의 전송이 가능하다. 신뢰성이 높지는 않지만 프로토콜이 간단해 비용이 작다는 장점이 있다. &lt;strong&gt;데이터그램&lt;/strong&gt;이라는 전송 단위로 전송된다. 대표적으로 &lt;strong&gt;UDP&lt;/strong&gt;가 해당된다.&lt;/p&gt;
&lt;h2&gt;유니캐스트&lt;/h2&gt;
&lt;p&gt;  1대1 통신을 의미한다. 전화를 생각하면 편리하다. &lt;strong&gt;IPv4/IPv6&lt;/strong&gt; 둘 다 지원하는 방식이다.&lt;/p&gt;
&lt;h2&gt;브로드캐스트&lt;/h2&gt;
&lt;p&gt;  1대의 호스트에서 연결된 모든 호스트에게 정보를 발신한다. 브로드캐스트가 통신할 수 있는 범위를 브로드캐스트 도메인이라고 한다. 멀티캐스트를 사용해 구현할 수 있다. &lt;strong&gt;IPv4&lt;/strong&gt;에서만 지원하는 방식이다.&lt;/p&gt;
&lt;h2&gt;멀티캐스트&lt;/h2&gt;
&lt;p&gt;  브로드캐스트와 여러 개의 호스트와 통신을 하지만 &lt;strong&gt;특정 그룹&lt;/strong&gt;으로 한정한다. 네트워크 장비가 이 기능을 제공해야만 사용이 가능하다. &lt;strong&gt;IPv4/IPv6&lt;/strong&gt; 모두 지원한다.&lt;/p&gt;
&lt;h2&gt;애니캐스트&lt;/h2&gt;
&lt;p&gt;  멀티캐스트와 같이 특정 그룹의 호스트를 향해 정보를 발신하지만 여러 호스트 중 네트워크상에 최적의 조건을 가지고 있는 호스트를 선별하고 이후 통신이 진행된다. &lt;strong&gt;IPv6&lt;/strong&gt;에서 지원된다.&lt;/p&gt;</content><author><name>Joonsoo Park</name></author><category term="네트워크" /><summary type="html">  통신방식들에 대해 알아보자.</summary></entry></feed>